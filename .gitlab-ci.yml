variables:
  TEST_RE: '^v[0-9]+\.[0-9]+\.[0-9]+[-0-9A-Za-z]*'
  EXTRACT_RE: '^v\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([-0-9A-Za-z]*\)'

stages:
  - test
  - deploy

unit_test:
  script:
    - pip install flake8
    - pip install flake8_docstrings
    - pip install -r requirements.txt 
    - pip install mock
    - flake8 --exclude=docs/ ./ 
    - python -m unittest discover -v
  tags:
    - docker
  stage: test

# Create the docker container and upload it to the internal docker registry with the tags
#   <PROJ_NAMESPACE>/tdp-controller:<COMMIT_ID>
#   <PROJ_NAMESPACE>/tdp-controller:<BRANCH>
#   <PROJ_NAMESPACE>/tdp-controller:<BRANCH>-<BUILD_ID>
# If this branch is the master, then also tag:
#   <PROJ_NAMESPACE>/tdp-controller:latest
dockerize:
  script:
    - PROJ_NAMESPACE=$(basename $(dirname "$CI_BUILD_REPO"))
    - REGISTRY="docker-registry.pdbld.f5net.com"
    - BUILD_TAG="$REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF"
    - docker build --no-cache -t $BUILD_TAG .
    - docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME
    - docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME
    - docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - if [ -v CI_BUILD_TAG ]; then
    -   if [ "$CI_BUILD_REF_NAME" != "$CI_BUILD_TAG" ]; then
    -     docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_TAG
    -     docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_TAG
    -     docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_TAG
    -   fi
    -   if [[ $CI_BUILD_TAG =~ $TEST_RE ]]; then
    -     latest=`git tag -l | sort -V | tail -n1`
    -     if [ "$latest" == "$CI_BUILD_TAG" ]; then
    -       docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:latest
    -       docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:latest
    -       docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:latest
    -     fi
    -     major=`echo $CI_BUILD_TAG | sed -e "s#$EXTRACT_RE#\1#"`
    -     minor=`echo $CI_BUILD_TAG | sed -e "s#$EXTRACT_RE#\2#"`
    -     docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:v$major.$minor
    -     docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:v$major.$minor
    -     docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:v$major
    -     docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:v$major
    -     docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:v$major
    -     docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:v$major.$minor
    -   fi
    - fi
    - if [ "$CI_BUILD_REF_NAME" == "master" ]; then
    -   docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:devel
    -   docker push $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:devel
    -   docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:devel
    - fi
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF
  stage: deploy
  tags:
    - docker-build

# Push changes to the f5-ci-docs GitHub repo on successful builds
github_update:
  stage: deploy
  script:
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    # Add the SSH key stored in GITHUB_DOCS_SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$GITHUB_DOCS_SSH_PRIVATE_KEY")
    - echo 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $*' > /tmp/ssh
    - chmod a+x /tmp/ssh
    - export GIT_SSH=/tmp/ssh
    # Clone f5-ci-docs from GitHub and push updated README and docs
    - if [ "$CI_BUILD_REF_NAME" == "master" ]; then
    -   git clone -b gitlab-ci git@github.com:F5Networks/f5-ci-docs.git
    -   cd f5-ci-docs/
    -   git config user.email "gitlab-runner@gitlab-shared-runner-01.com"
    -   git config user.name "gitlab-runner"
    -   cp ../README.rst ./docs/csi/
    -   git status
    -   git add docs/csi/README.rst
    -   git commit -m "changes pushed to GitHub by gitlab-ci for commit {$CI_BUILD_REF}, build ID {$CI_BUILD_ID}"
    -   git push origin gitlab-ci
    - fi
