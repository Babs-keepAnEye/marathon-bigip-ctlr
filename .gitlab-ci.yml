variables:
  TEST_RE: '^v[0-9]+\.[0-9]+\.[0-9]+[-0-9A-Za-z]*'
  EXTRACT_RE: '^v\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([-0-9A-Za-z]*\)'

stages:
  - test
  - deploy

unit_test:
  script:
    - pip install flake8==3.2.1
    - pip install flake8_docstrings==1.0.2
    - pip install -r requirements.txt 
    - pip install mock
    - pip install coverage
    - flake8 --exclude=docs/ ./ 
    - coverage run -m unittest discover -v
    - coverage html
    - coverage report
  tags:
    - docker
  artifacts:
    untracked: true
    paths:
      - htmlcov/*
  stage: test

build docs:
  image: docker-registry.pdbld.f5net.com/tools/containthedocs:master
  script:
    - ./scripts/test-docs.sh
  tags:
    - docker
  stage: test
  artifacts:
    paths:
      - docs/_build/html


# Create the docker container and upload it to the internal docker registry with the tags
#   <PROJ_NAMESPACE>/marathon-bigip-ctlr:<COMMIT_ID>
#   <PROJ_NAMESPACE>/marathon-bigip-ctlr:<BRANCH>
#   <PROJ_NAMESPACE>/marathon-bigip-ctlr:<BRANCH>-<BUILD_ID>
dockerize:
  script:
    - PROJ_NAMESPACE=$(basename $(dirname "$CI_BUILD_REPO"))
    - REGISTRY="docker-registry.pdbld.f5net.com"
    - BUILD_TAG="$REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF"
    - docker build --no-cache -t $BUILD_TAG .
    - docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF_NAME
    - docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF-$CI_PIPELINE_ID
    - docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF_NAME
    - docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF-$CI_PIPELINE_ID
    - if [ -v CI_BUILD_TAG ]; then
    -   if [ "$CI_BUILD_REF_NAME" != "$CI_BUILD_TAG" ]; then
    -     docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_TAG
    -     docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_TAG
    -     docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_TAG
    -   fi
    -   if [[ $CI_BUILD_TAG =~ $TEST_RE ]]; then
    -     latest=`git tag -l | sort -V | tail -n1`
    -     if [ "$latest" == "$CI_BUILD_TAG" ]; then
    -       docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:latest
    -       docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:latest
    -       docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:latest
    -     fi
    -     major=`echo $CI_BUILD_TAG | sed -e "s#$EXTRACT_RE#\1#"`
    -     minor=`echo $CI_BUILD_TAG | sed -e "s#$EXTRACT_RE#\2#"`
    -     docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:v$major.$minor
    -     docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:v$major.$minor
    -     docker tag $BUILD_TAG $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:v$major
    -     docker push $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:v$major
    -     docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:v$major
    -     docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:v$major.$minor
    -   fi
    - fi
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF_NAME
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF
    - docker rmi $REGISTRY/$PROJ_NAMESPACE/marathon-bigip-ctlr:$CI_BUILD_REF-$CI_PIPELINE_ID
  stage: deploy
  tags:
    - docker-build


attributions generator:
  image: docker-registry.pdbld.f5net.com/velcro/attributions-generator:master
  stage: deploy
  script:
    - /usr/local/bin/run-backends.sh $PWD
    - node /frontEnd/frontEnd.js $PWD
  tags:
    - docker
  artifacts:
    paths:
      - Licenses_generated.json
      - flatfile_attributions.json
      - golang_attributions.json
      - pip_attributions.json
      - ATTRIBUTIONS.md

Publish docs to internet:
  # Publish ONLY 1.0-stable to the internet.
  image: docker-registry.pdbld.f5net.com/tools/containthedocs:master
  stage: deploy
  tags:
   - docker
  only:
   - 1.0-stable@velcro/marathon-bigip-controller
  dependencies:
    - build docs
  script:
    - publish-product-docs-to-prod connectors/marathon-bigip-ctlr v1.0

