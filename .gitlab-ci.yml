before_script:

stages:
  - test
  - deploy

unit_test:
  script:
    - pip install -r requirements.txt 
    - pip install mock
    - python -m unittest discover -v
  tags:
    - docker
  stage: test

# Create the docker container and upload it to the internal docker registry with the tags
#   <PROJ_NAMESPACE>/tdp-controller:<COMMIT_ID>
#   <PROJ_NAMESPACE>/tdp-controller:<BRANCH>
#   <PROJ_NAMESPACE>/tdp-controller:<BRANCH>-<BUILD_ID>
# If this branch is the master, then also tag:
#   <PROJ_NAMESPACE>/tdp-controller:latest
dockerize:
  script:
    - PROJ_NAMESPACE=$(basename $(dirname "$CI_BUILD_REPO"))
    - BUILD_TAG="docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF"
    - docker build --no-cache -t $BUILD_TAG .
    - docker tag $BUILD_TAG docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME
    - docker tag $BUILD_TAG docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker push docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME
    - docker push docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - if [ "$CI_BUILD_REF_NAME" == "master" ]; then
    -   docker tag $BUILD_TAG docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:latest
    -   docker push docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:latest
    -   docker rmi docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:latest
    - fi
    - docker rmi docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME-$CI_BUILD_ID
    - docker rmi docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF_NAME
    - docker rmi docker-registry.pdbld.f5net.com/$PROJ_NAMESPACE/f5-marathon-lb:$CI_BUILD_REF
  stage: deploy
  tags:
    - docker-build
